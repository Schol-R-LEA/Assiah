'(("AND")
  ((NONE NONE NONE (4 #x80 (S W)) 4 ALLOWED RING-3))
  "Bitwise AND")

'(("BSF")
  ((NONE #x0F NONE (8 #xBC (NONE)) reg NO RING-3))
  "Bit Scan Forward")

'(("BSR")
  ((NONE #x0F NONE (8 #xBD (NONE)) reg NO RING-3))
  "Bit Scan Reverse")

'(("BT")
  ((NONE #x0F NONE (4 #xA3 (NONE)) reg NO RING-3)
   (NONE #x0F NONE (4 #xBA (NONE)) 4 NO RING-3))
  "Bit Test")

'(("BTC")
  ((NONE #x0F NONE (4 #xBA (NONE)) 7 NO RING-3)
   (NONE #x0F NONE (4 #xBB (NONE)) reg NO RING-3))
  "Bit Test and Complement")

'(("BTR")
  ((NONE #x0F NONE (4 #xB3 (NONE)) reg NO RING-3)
   (NONE #x0F NONE (4 #xBA (NONE)) 6 NO RING-3))
  "Bit Test and Reset")

'(("BTS")
  ((NONE #x0F NONE (4 #xAB (NONE)) reg NO RING-3)
   (NONE #x0F NONE (4 #xBA (NONE)) 5 NO RING-3))
  "Bit Test and Set")

'(("CMPSD")
  ((NONE NONE NONE (8 #xA7 (NONE)) NONE NO RING-3))
  "Compare String Doubleword")

'(("CDQ")
  ((NONE NONE NONE (8 #x99 (NONE)) NONE NO RING-3))
  "Convert Doubleword to Quadword")

'(("CWDE") 
  ((NONE NONE NONE (8 #x98 (NONE)) NONE NO RING-3))
  "Convert Word to Doubleword")
